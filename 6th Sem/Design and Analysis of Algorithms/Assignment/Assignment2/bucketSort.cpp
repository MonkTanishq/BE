#include<bits/stdc++.h>
#include <iostream>  
using namespace std;  
  
int getMax(int arr[], int n) // function to get maximum element from the given array  
{  
  int max = arr[0];  
  for (int i = 1; i < n; i++)  
    if (arr[i] > max)  
      max = arr[i];  
  return max;  
}  

void bucket(int arr[], int n) // function to implement bucket sort  
{  
  int max = getMax(arr, n); //max is the maximum element of array  
  int bucket[max], i;  
  for (int i = 0; i <= max; i++)  
  {  
    bucket[i] = 0;  
  }  
  for (int i = 0; i < n; i++)  
  {  
    bucket[arr[i]]++;  
  }  
  for (int i = 0, j = 0; i <= max; i++)  
  {  
    while (bucket[i] > 0)  
    {  
      arr[j++] = i;  
      bucket[i]--;  
    }  
  }   
}  

void printArr(int arr[], int n) // function to print array elements  
{  
  for (int i = 0; i < n; ++i)  
    cout<<arr[i]<<" ";  
  cout<<endl;
}  

int main()  
{  
  time_t start, end;
    time(&start);

    int n;
    int arr[] = {509,197,81,727,929,904,102,67,362,1421,507,536,887,752,1037,574,284,846,20,484,1202,44,618,868,1007,1127,562,639,579,48,621,519,480,693,1096,1024,410,599,1225,998,390,566,1027,1153,241,55,1346,1254,218,600,709,1212,1443,784,831,673,1183,796,1219,498,269,1125,653,1098,1132,1401,773,1048,1180,123,973,15,1496,10,528,1312,198,983,1230,161,1236,1332,1433,1330,535,452,525,59,1365,349,745,1109,1144,1207,1100,1453,1010,801,1289,1224,1438,878,1469,231,451,100,461,1413,803,1034,972,949,1314,820,437,80,815,125,1108,1498,565,665,725,958,1073,393,188,1379,435,669,730,630,336,698,514,716,111,968,1335,513,99,266,1409,1466,963,1311,775,1040,1033,1245,492,1259,547,956,763,140,740,531,481,1004,962,1003,605,667,330,1261,178,377,1458,821,954,77,255,827,1500,886,11,274,802,129,309,134,1305,1091,338,305,529,418,463,555,1435,1449,809,645,1396,1099,1233,43,545,1278,204,273,840,523,501,4,388,1355,483,931,1030,460,1456,749,1440,1011,1203,47,342,567,1113,1045,935,882,244,646,660,110,1444,992,851,1459,717,724,559,267,113,627,926,731,1318,2,674,990,854,499,508,898,1229,270,116,1452,1487,970,1114,1197,1434,912,1074,252,1359,419,663,1424,896,708,312,1187,368,477,1080,865,439,145,1276,372,1106,516,770,1041,1445,1394,1484,696,900,981,1214,1117,580,73,1185,458,578,71,323,685,841,689,534,292,750,246,205,597,131,921,1303,449,1047,786,1055,385,1250,233,70,230,300,662,932,1124,465,863,32,881,1269,348,1464,664,1268,611,533,345,488,719,830,953,1025,550,491,17,1495,640,466,1241,1420,756,1430,175,537,94,485,469,924,649,512,1348,651,789,988,1014,966,1031,697,1210,625,1395,1457,1077,844,234,1270,173,379,444,1336,184,328,1375,1349,303,576,903,351,583,1282,352,1406,60,314,327,1293,893,122,301,598,872,165,839,1009,1414,331,216,1373,221,671,603,788,250,283,871,127,1357,1107,213,838,319,1249,517,1422,587,232,1382,41,445,588,883,684,560,139,153,714,97,406,1158,919,172,1103,3,927,63,748,369,1290,964,226,1442,1260,737,551,766,339,911,57,1258,1131,1056,249,291,1485,540,1475,1381,847,798,144,1085,346,1369,1267,721,115,1307,495,105,42,343,381,842,650,1163,1408,1461,1344,1283,1016,1252,658,638,367,1193,739,201,306,1071,253,959,151,9,768,945,1145,167,1172,1407,202,1070,765,1173,888,1387,1001,169,532,1149,546,225,1255,179,1065,617,518,1310,584,239,1482,189,1277,25,1364,1000,1222,582,633,814,505,1454,332,359,542,1315,728,26,137,850,1053,473,420,1446,296,1198,1223,1087,1247,1246,49,146,1235,16,357,380,1418,1320,1002,37,1371,1376,1343,1090,1480,152,816,1460,1351,315,1427,952,1339,1227,1120,543,33,421,256,121,743,732,1415,936,472,159,859,1486,354,993,74,1273,622,1263,1441,710,510,104,877,192,1164,78,1331,215,647,1399,64,1319,1094,386,873,404,464,1148,289,347,87,394,909,902,0,856,149,1483,1013,235,409,1104,521,61,628,797,1383,387,1169,1200,1366,928,930,209,155,1072,1006,948,364,1021,614,1018,1404,1151,569,433,1161,895,1177,825,544,285,695,806,62,79,156,1291,76,845,1432,818,181,1281,686,774,761,360,985,552,1374,490,1143,207,889,310,260,13,1171,1360,1162,1220,1032,785,1165,643,694,143,899,783,18,901,1064,12,1111,712,88,214,885,626,1322,1402,457,1354,86,1333,777,1301,1112,405,943,164,908,1221,1328,1150,462,1051,334,800,701,1345,1384,1154,808,548,154,294,594,1181,399,293,98,1023,874,592,1083,833,781,1378,836,34,424,142,259,629,805,1060,734,744,1160,130,120,333,938,760,880,174,224,1455,206,163,158,53,736,183,337,558,1157,428,652,401,1271,813,487,1093,1116,1297,634,170,699,455,704,571,363,987,894,476,254,913,415,500,590,1431,1242,700,1139,759,1017,1019,185,819,268,1092,624,423,397,741,549,1068,554,703,257,91,19,1097,191,288,920,1062,793,416,767,242,526,620,1217,538,193,1159,1288,941,855,950,297,5,1008,295,1353,557,828,849,1362,1296,341,769,124,570,1208,595,304,150,606,412,1137,1174,160,280,199,891,687,1490,1201,1079,679,459,1194,1135,355,382,411,817,1231,302,967,799,157,918,553,707,27,568,1209,395,996,1192,979,1076,661,1285,1191,563,1186,672,589,1462,520,772,961,747,939,735,114,432,925,659,644,353,1028,275,1417,969,413,1450,869,1238,51,680,1022,38,1298,447,1489,746,1036,1039,811,370,780,995,6,742,468,668,212,326,1294,1316,1397,308,657,879,408,722,66,1370,1392,1251,506,1122,1176,58,272,1292,591,906,1286,791,916,1166,976,30,56,1488,1350,21,1179,453,277,1156,443,344,1265,282,1419,112,635,1101,795,1204,190,1110,503,1130,96,922,335,1334,493,1123
};
 n = sizeof(arr)/sizeof(arr[0]);
	

    
  bucket(arr, n);  
  cout<<"\nAfter sorting array elements are - \n";  
  printArr(arr, n); 

  time(&end);

    double time_taken = double(end - start);
    cout << "Time taken by program is : "<<fixed
        << time_taken << setprecision(2);
    cout << " sec " << endl;
    return 0; 
}  